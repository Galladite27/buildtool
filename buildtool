#!/bin/sh

# cleanfiles should be removed during a normal build and a level 1 debug build (i.e. will only be useful to deep debugging, e.g. *.o files)
cleanfiles=("src/main.o")

# reallycleanfiles should be removed during a normal build only (i.e. will be useful to all debugging, e.g. makefiles)
reallycleanfiles=("src/Makefile", "src/.deps")

# binname is the name of the file in src/ which should be moved to build/
binname="main"

prompt () {
    if [ $? == 0 ]; then
        echo
        echo "Stage success. Proceed to $1 stage? y/n"
        read a
        if [ "$a" == "n" ]; then
            echo
            echo "Aborting."
            exit
        fi
    else
        echo
        echo "Stage failure. Aborting."
        exit
    fi
}

cleanup () {
    if [ "$1" == "debug1" ]; then
        rm -rf aclocal.m4 autom4te.cache config.h.in config.status Makefile.in stamp-h1 src/Makefile.in build
        for i in "${cleanfiles[@]}"; do
            rm -rf $(echo $i | sed 's/,//g')
        done
    elif [ "$1" == "debug2" ]; then
        :
    else
        rm -rf aclocal.m4 autom4te.cache build-aux config.h config.h.in config.log config.status configure Makefile Makefile.in stamp-h1 src/Makefile.in build
        for i in "${cleanfiles[@]}"; do
            rm -rf $(echo $i | sed 's/,//g')
        done
        for i in "${reallycleanfiles[@]}"; do
            rm -rf $(echo $i | sed 's/,//g')
        done
    fi
    mkdir ./build
    mv ./src/$binname ./build/$binname
}

if [ "$1" == "build" ]; then
    if [ "$2" == "dist" ]; then
        ./buildtool build debug2
        if [ -e /tmp/buildtool ]; then
            rm -rf /tmp/buildtool/*
        else
            mkdir /tmp/buildtool
        fi
        make dist
        mv ./*.tar.gz /tmp/buildtool
        cleanup $2
        rm ./build/$binname
        mv /tmp/buildtool/*.tar.gz ./build/
    else
        ./buildtool clean
        autoreconf -i
        ./configure
        make
        cleanup $2
    fi
elif [ "$1" == "clean" ]; then
    git clean -dfx
elif [ "$1" == "slowbuild" ]; then
    echo "Cleaning..."
    ./buildtool clean
    prompt "autoconfiguration"
    autoreconf -i
    prompt "configuration"
    ./configure
    prompt "build"
    make
    if [ $? == 0 ]; then
        echo
        echo "Build successful."
    else
        echo
        echo "Build failed."
    fi
    cleanup $2
else
    echo "Options:"
    echo
    echo "build - rebuild and compile the project, leaving only the compiled binary"
    echo "build debug1 - rebuild and compile the project, leaving some intermediary files"
    echo "build debug2 - rebuild and compile the project, leaving all intermediary files"
    echo "build dist - rebuild and compile the project, creating a tarball ready for distribution"
    echo "clean - remove all files untracked by git"
    echo "slowbuild - ask for confirmation after each stage of building"
fi
